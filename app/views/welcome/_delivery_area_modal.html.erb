<div class="modal fade" id="delivery_area_modal" tabindex="-1" role="dialog" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <center>
        <div id="showimage"></div>
      </center>

      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal">&times;</button>
        <h4 class="modal-title">Select Delivery Area</h4>
      </div>

      <%= form_tag customer_restaurants_list_path, method: :get do %>
        <%= hidden_field_tag(:search, params[:search]) %>
        <%= hidden_field_tag(:keyword, params[:keyword]) %>
        <%= hidden_field_tag(:cuisine_id, params[:cuisine_id]) %>
        <%= hidden_field_tag(:restaurant_id, params[:restaurant_id]) %>

        <div class="modal-body">
          <div style="margin-bottom:10px;">
            <%= text_field_tag(:address, "", placeholder: "Search delivery area", class: "form-control", required: true) %>
            <%= hidden_field_tag(:latitude, "") %>
            <%= hidden_field_tag(:longitude, "") %>
          </div>

          <div style="width: 100%; height: 400px;overflow: hidden;position: relative;top: 5px;">
            <div id="map_canvas"></div>
          </div>

          <div class="modal-footer">
            <button type="button" class="btn btn-danger pull-right" style="margin-left:4px; color: #ffffff;" data-dismiss="modal">Cancel</button>
            <input type="submit" value="Submit" class="btn theme-btn pull-right" id="add_area">
          </div>
        </div>
      <% end %>
    </div>
  </div>
</div>

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyACAG0hdhzYNaX80y68Fsn2D5-jQnSGm-Q&libraries=places"></script>

<script>
  var placeSearch, autocomplete;
  autocomplete = new google.maps.places.Autocomplete( (document.getElementById('address')),{ types: [], componentRestrictions: {country: 'BH'}});

  google.maps.event.addListener(autocomplete, "place_changed", function() {
    var place = autocomplete.getPlace();
    codeAddress();
  });

  function geolocate() {
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(function(position) {
        var geolocation = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
        autocomplete.setBounds(new google.maps.LatLngBounds(geolocation, geolocation));
      });
    }
  }

  var geocoder;
  var map;
  var marker;

  var infowindow = new google.maps.InfoWindow({
    size: new google.maps.Size(150, 50)
  });

  function initialize() {
    geocoder = new google.maps.Geocoder();
    var latlng = new google.maps.LatLng($("#latitude").val(), $("#longitude").val());
    var mapOptions = {
      zoom: 12,
      center: latlng,
      mapTypeId: google.maps.MapTypeId.HYBRID
    }
    map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);
    marker = new google.maps.Marker({position: latlng, map: map, draggable: true});
    geocodePosition(latlng);
    google.maps.event.addListener(map, "click", function() {
      infowindow.close();
    });

    marker.addListener("dragend", function(event) {
      $("#latitude").val(event.latLng.lat())
      $("#longitude").val(event.latLng.lng())
      var newlatlng = new google.maps.LatLng($("#latitude").val(), $("#longitude").val());
      geocodePosition(newlatlng);
    });
  }

  function geocodePosition(pos) {
    geocoder.geocode({
      latLng: pos
    }, function(responses) {
      if (responses && responses.length > 0) {
        marker.formatted_address = responses[0].formatted_address;
      } else {
        marker.formatted_address = "Cannot determine address at this location.";
      }
      infowindow.setContent(marker.formatted_address + "<br>coordinates: " + marker.getPosition().toUrlValue(6));
      $("#address").val(marker.formatted_address)
      infowindow.open(map, marker);
    });
  }

  function codeAddress() {
    var address = document.getElementById("address").value;
    geocoder.geocode({
      "address": address
    }, function(results, status) {
      if (status == google.maps.GeocoderStatus.OK) {
        map.setCenter(results[0].geometry.location);
        if (marker) {
          marker.setMap(null);
          if (infowindow) infowindow.close();
        }
        marker = new google.maps.Marker({
          map: map,
          draggable: true,
          position: results[0].geometry.location
        });
        google.maps.event.addListener(marker, "dragend", function() {
          geocodePosition(marker.getPosition());
          document.getElementById("address").value= marker.formatted_address
          var addressLat = document.getElementById("latitude").value= marker.getPosition().toUrlValue(6).split(',')[0];
          var addressLong = document.getElementById("longitude").value= marker.getPosition().toUrlValue(6).split(',')[1];
          setTimeout(function(){google.maps.event.trigger(marker, 'click'); }, 300);
        });
        google.maps.event.addListener(marker, "click", function() {
          var addressLat = document.getElementById("latitude").value= marker.getPosition().toUrlValue(6).split(',')[0];
          var addressLong = document.getElementById("longitude").value= marker.getPosition().toUrlValue(6).split(',')[1];

          if (marker.formatted_address) {
            document.getElementById("address").value= marker.formatted_address
            infowindow.setContent(marker.formatted_address + "<br>coordinates: " + marker.getPosition().toUrlValue(6));
          } else {
            document.getElementById("address").value= address
            infowindow.setContent(address + "<br>coordinates: " + marker.getPosition().toUrlValue(6));
          }
          infowindow.open(map, marker);
        });
        google.maps.event.trigger(marker, "click");
      } else {
        alert("Geocode was not successful for the following reason: " + status);
      }
    });
  }
</script>